Langchain：

学会使用模型，提示，解析器（将模型的输出转化为我们能看懂的输出）
提示模板使用：需要导入openAI库，可以通过temperature控制随机性大小。Langchain提供了部分提示模板，如翻译，摘要等等。需要注意我们得到的输出格式，是字符串还是字典。

希望聊天机器人能记住相关的内容，构建一个chatopenAI，提供的API可以进行历史纪录的保存，你也可以自己进行记忆缓存的输出。但显然随着时间推移，记忆量会越来越大，所以会采取相应的措施而不是全部保存。

chain，通过链将大模型与提示词结合在一起，例如LLMchain，就是直接组合prompt和模型，链与链之间相互结合，比如翻译加摘要，加判断等等组合（但一定要注意变量的准确性），并且也可以设计并行结构或者类似路由器选择合适的转发等等chain结构。

文档问答，将文档进行向量存储，与查询进行相似度比较（由于太大，所以选择分块对比），选择较为相似的内容。

评估LLM程序，可以考虑使用模型去评判模型，整个系统一起进步。可以创建一些问答（可以手动，也可以自动化），该框架还提供具体token使用以供观察，且可以使用LLM进行帮助评估（因为可以进行一些比较困难的比较，如正则化等无法比较的，而该方法可以进行语义匹配）

代理，将LLM视为推理引擎，其可以使用如维基百科等工具，代理方法也不止一种，代理的最大好处，是可以自由选择自己的信息来源和数据。





