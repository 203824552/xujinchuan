LC算法收敛结果

LC算法定义了一种收缩路径，随着自定义参数u越来越大从而越来越精确的定位到所需要的解压缩方法，如何设计自定义参数就很重要，不仅需要考虑运算的准确性，还需要注意运行时间（很难真正意义上快速且连续）。

要想要结果收缩，往往是通过梯度下降算法，这里则涉及到了一些问题，例如，如果使用 SGD，则在每个新的 L 步的早期阶段会出现较⼤的、不理想的跳跃。考虑两种优化 L 步的情况：使用固定步⻓的梯度下降法和使用 SGD。

对于固定步长，损失值是凸的时候可以进行，根据参数u的调整可以加快一些收敛速度。

对于随机梯度下降，精确评估梯度的成本太高。实际上，最好采取近似值基于上一个步骤的梯度进行评估，再使用一些梯度噪声（随机）。不过这些噪声超参数就较为难以设计。并且由于早期可能会使得权重有较大偏差，学习率的大小需要注意。